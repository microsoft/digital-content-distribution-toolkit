<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="INC_ERR_0001" xml:space="preserve">
    <value>INC_ERR_0001-Invalid date range</value>
  </data>
  <data name="INC_ERR_0002" xml:space="preserve">
    <value>INC_ERR_0002-Retailer provider id does not exist</value>
  </data>
  <data name="INC_ERR_0003" xml:space="preserve">
    <value>INC_ERR_0003-Plan should have atleast one plan detail</value>
  </data>
  <data name="INC_ERR_0004" xml:space="preserve">
    <value>INC_ERR_0004-Event type {0} is not applicable for audience {1}</value>
  </data>
  <data name="INC_ERR_0005" xml:space="preserve">
    <value>INC_ERR_0005-Duplicate event type {0} for given plan</value>
  </data>
  <data name="INC_ERR_0006" xml:space="preserve">
    <value>INC_ERR_0006-More than one active plan exists</value>
  </data>
  <data name="INC_ERR_0007" xml:space="preserve">
    <value>INC_ERR_0007-Plan start date is overlapping with current active plan</value>
  </data>
  <data name="INC_ERR_0008" xml:space="preserve">
    <value>INC_ERR_0008-Invalid Rule type</value>
  </data>
  <data name="INC_ERR_0009" xml:space="preserve">
    <value>INC_ERR_0009-Invalid Formula type</value>
  </data>
  <data name="INC_ERR_0010" xml:space="preserve">
    <value>INC_ERR_0010-Order completed event should have event sub type with content provider id</value>
  </data>
  <data name="INC_ERR_0011" xml:space="preserve">
    <value>INC_ERR_0011-Start date must be greater than current date</value>
  </data>
  <data name="INC_ERR_0012" xml:space="preserve">
    <value>INC_ERR_0012-Only draft mode plans can be updated</value>
  </data>
  <data name="INC_ERR_0013" xml:space="preserve">
    <value>INC_ERR_0013-Error in updating plan</value>
  </data>
  <data name="INC_ERR_0014" xml:space="preserve">
    <value>INC_ERR_0014-Only plans in draft mode can be deleted</value>
  </data>
  <data name="INC_ERR_0015" xml:space="preserve">
    <value>INC_ERR_0015-Only plans in draft mode can be published</value>
  </data>
  <data name="INC_ERR_0016" xml:space="preserve">
    <value>INC_ERR_0016-Something went wrong while publishing plan</value>
  </data>
  <data name="INC_ERR_0017" xml:space="preserve">
    <value>INC_ERR_0017-Only one draft plan can exist in the system</value>
  </data>
  <data name="INC_ERR_0018" xml:space="preserve">
    <value>INC_ERR_0018-Given audience type does  not match with api</value>
  </data>
  <data name="INC_ERR_0019" xml:space="preserve">
    <value>INC_ERR_0019-Overlapping plan exists with given start date with id {0}</value>
  </data>
  <data name="INC_ERR_0020" xml:space="preserve">
    <value>INC_ERR_0020-Overlapping plan exists with given end date with id {0}</value>
  </data>
  <data name="INC_ERR_0021" xml:space="preserve">
    <value>INC_ERR_0021-Only published plans can be closed</value>
  </data>
  <data name="INC_ERR_0022" xml:space="preserve">
    <value>INC_ERR_0022-Given end date overlaps with another plan with start date {0} and end date {1}</value>
  </data>
  <data name="INC_ERR_0023" xml:space="preserve">
    <value>INC_ERR_0023-Error in closing plan</value>
  </data>
  <data name="INC_ERR_0024" xml:space="preserve">
    <value>INC_ERR_0024-Overlapping plan exists in given date range with start date {0} and end date {1}</value>
  </data>
  <data name="INC_ERR_0025" xml:space="preserve">
    <value>INC_ERR_0025-Retailer do not exist with given id and partner code</value>
  </data>
  <data name="INC_ERR_0026" xml:space="preserve">
    <value>INC_ERR_0026-User is not autorized to query given retailer information</value>
  </data>
  <data name="INC_ERR_0027" xml:space="preserve">
    <value>INC_ERR_0027-No plan exists for the given id</value>
  </data>
  <data name="INC_ERR_0028" xml:space="preserve">
    <value>INC_ERR_0028-Incentive plan is not of type {0}</value>
  </data>
  <data name="INC_ERR_0029" xml:space="preserve">
    <value>INC_ERR_0029-Invalid event type {0}</value>
  </data>
  <data name="INC_ERR_0030" xml:space="preserve">
    <value>INC_ERR_0030-Maximum 30 days of data can be queried</value>
  </data>
  <data name="INC_ERR_0031" xml:space="preserve">
    <value>INC_ERR_0031-Received event {0} from future for User ID {1}</value>
  </data>
  <data name="INC_ERR_0032" xml:space="preserve">
    <value>INC_ERR_0032-Received duplicate {0} for User ID {1}</value>
  </data>
  <data name="INC_ERR_0033" xml:space="preserve">
    <value>INC_ERR_0033-Received event {0} with no content ID for User ID {1}</value>
  </data>
  <data name="INC_ERR_0034" xml:space="preserve">
    <value>INC_ERR_0034-Received event {0} with unknown content ID {1} for User ID {2}</value>
  </data>
</root>