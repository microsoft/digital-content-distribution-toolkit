variables:
  RunNumber: '$(Build.BuildNumber)'

parameters:
  - name: onlyDeploy
    default: false
    type: boolean

  - name: deployBuildNumber
    default: latest
    type: string

trigger:
- manual

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  condition: eq('${{ parameters.onlyDeploy }}', false)
  jobs:
  - job: Build
    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(acr-service-connection)

    - task: CmdLine@2
      displayName: "Building docker image"
      inputs:
        script: "docker build -t $(image_name):$(RunNumber) -f ./blendnet.retailer.api/Dockerfile ."

    - task: CmdLine@2
      displayName: "Pushing image to ACR"
      inputs:
        script: "docker push $(image_name):$(RunNumber)"

    - task: Docker@2
      displayName: Logout of ACR
      inputs:
        command: logout
        containerRegistry: $(acr-service-connection)

- stage: Deploy
  dependsOn: Build
  condition: or(succeeded(), eq('${{ parameters.onlyDeploy }}', true))
  jobs:
  - job: Deploy
    steps:
    - task: CmdLine@2
      condition: eq('${{ parameters.onlyDeploy }}', false)
      inputs:
        script: 'sed -i ''s/blendnet.retailer.api:latest/blendnet.retailer.api:$(RunNumber)/g'' blendnet.retailer.api/blendnet.retailer.api.yaml'
    - task: CmdLine@2
      condition: eq('${{ parameters.onlyDeploy }}', true)
      inputs:
        script: 'sed -i ''s/blendnet.retailer.api:latest/blendnet.retailer.api:${{ parameters.deployBuildNumber }}/g'' blendnet.retailer.api/blendnet.retailer.api.yaml'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'aks-blendnet-dev-default'
        manifests: 'blendnet.retailer.api/blendnet.retailer.api.yaml'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'aks-blendnet-dev-default'
        manifests: 'appgateway.yaml'
